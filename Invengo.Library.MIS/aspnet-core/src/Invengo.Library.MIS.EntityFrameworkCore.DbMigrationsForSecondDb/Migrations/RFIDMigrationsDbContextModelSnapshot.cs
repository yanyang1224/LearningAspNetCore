// <auto-generated />
using System;
using Invengo.Library.MIS.EntityFrameworkCore.DbMigrationsForSecondDb.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Invengo.Library.MIS.EntityFrameworkCore.DbMigrationsForSecondDb.Migrations
{
    [DbContext(typeof(RFIDMigrationsDbContext))]
    partial class RFIDMigrationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Invengo.Library.MIS.RFID.BookInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("szBookID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("bBookLabelChecked")
                        .HasColumnType("bit");

                    b.Property<bool?>("bForceSortCase")
                        .HasColumnType("bit");

                    b.Property<int?>("bLostBookFlag")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dtAutoUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtBorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtConvertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtLastRead")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtNeedBackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtPublishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("fPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("nBookLenType")
                        .HasColumnType("int");

                    b.Property<int?>("nBookStatus")
                        .HasColumnType("int");

                    b.Property<int?>("nBookThickness")
                        .HasColumnType("int");

                    b.Property<int?>("nBooksTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("nConvertStaffID")
                        .HasColumnType("int");

                    b.Property<long?>("nEPCOrder")
                        .HasColumnType("bigint");

                    b.Property<string>("nLabelID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nPages")
                        .HasColumnType("int");

                    b.Property<int?>("nPublishID")
                        .HasColumnType("int");

                    b.Property<int?>("nRenewTime")
                        .HasColumnType("int");

                    b.Property<int?>("nSetInfoCount")
                        .HasColumnType("int");

                    b.Property<int?>("nSetInfoOrder")
                        .HasColumnType("int");

                    b.Property<int?>("nStaffID")
                        .HasColumnType("int");

                    b.Property<int?>("nStartYear")
                        .HasColumnType("int");

                    b.Property<int?>("nUpdateStaffID")
                        .HasColumnType("int");

                    b.Property<string>("szAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szBookCaseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szBookIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szBookLen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szBookSSID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szCardID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szClassNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szConvertStaff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szMainWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szMedicalLib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szMemo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szMoneyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szPretendIndexNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szPublishyear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szSeriesID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szTemplibCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("szlibCD")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
